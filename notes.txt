ElasticSearch resources
 * https://logz.io/blog/elasticsearch-tutorial/
 * w/docker: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
 * https://levelup.gitconnected.com/how-to-run-elasticsearch-8-on-docker-for-local-development-401fd3fff829



 ES queries

 result = client.search(index: "test_index", body: {query: {match: {_id: "ZQYa6IcBpXEdbSpH8h8"}}})

Tags need a keyword mapping
 client = Elasticsearch::Client.new(log: true, trace: true)
 client.indices.create(index:INDEX, body: { mappings: {properties: { tags: { type: "keyword" } }}})


 docker
 * docker start es01
 * docker stop es01
 * docker ps -a


 App URLs:
  * GET /applications returns everything 
  * GET /applications/:environment returns everything in that environment
  * GET /applications/:environment/:app_name returns an app in that environment
  * GET /applications/:environment?tags=:comma_delimted_tags treturns all applications in that env w/tags
  * GET /applications/:environment?property_name=property_value returns all applications in those props (i.e. name=andy)

To do:
 * slides/story
 ** no LLMs used
 ** problem - tag various infra assets (AWS has come along way, but NFLX has more than just AWS)
 ** OSS vs internal 
 ** didn't want to support ES so rewrote into C*

* write up a markdown readme
* come up w/URLs to show API during demo
* implement POST (new taggable), PUT (update one), and DELETE


Retrieve all documents
 * curl -X GET 'http://localhost:9200/test_tags/_search?pretty=true'
 
Seed w/one document
 * curl -XPOST -H "Content-Type: application/json" 'http://localhost:9200/test_tags/_doc' --data @etc/init-seed-1.json
 * curl -XPOST -H "Content-Type: application/json" 'http://localhost:9200/test_tags/_doc?pretty=true' --data @etc/init-seed-2.json

Get total count of docs
 * curl -XGET 'http://localhost:9200/test_tags/_count?pretty=true'


Using the app
* http://localhost:4567/applications/prod/front50
* http://localhost:4567/applications?tags=SEC-2100
* http://localhost:4567/applications?stack=test